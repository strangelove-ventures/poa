name: e2e
on:
  push:
    branches:
    - main
  pull_request:

env:
  LINT_VERSION: v1.52
  GO_VERSION: 1.21.0

  TAR_PATH: /tmp/poa.tar
  IMAGE_NAME: poa
  DOCKER_TAG: poa:local

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.DOCKER_TAG }}
          outputs: type=docker,dest=${{ env.TAR_PATH }}

      - name: Upload host artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ${{ env.IMAGE_NAME }}
          path: ${{ env.TAR_PATH }}
          overwrite: true

  test:
    needs: build-docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - "ictest-poa"
          - "ictest-jail"
          - "ictest-val-add"
          - "ictest-val-remove"
          - "ictest-poa-to-pos"
      fail-fast: false

    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: checkout chain
        uses: actions/checkout@v4

      - name: Download Host Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ env.IMAGE_NAME }}
          path: /tmp

      - name: Load Docker Image
        run: |
          docker image load -i ${{ env.TAR_PATH }}
          docker image ls -a

      - name: Run Test
        run: make ${{ matrix.test }}

  coverage:
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v4

     - uses: actions/setup-go@v4
       with:
         go-version: ${{ env.GO_VERSION }}

     - name: Download Host Artifact
       uses: actions/download-artifact@v4.1.8
       with:
         name: ${{ env.IMAGE_NAME }}
         path: /tmp

     - name: Load Docker Image
       run: |
         docker image load -i ${{ env.TAR_PATH }}
         docker image ls -a

     - name: Run coverage
       run: make coverage

     - name: Upload coverage to Codecov
       uses: codecov/codecov-action@v4
       with:
         file: /tmp/poa-coverage/coverage-merged-filtered.out
         token: ${{ secrets.CODECOV_TOKEN }}
       env:
         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
