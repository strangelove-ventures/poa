syntax = "proto3";
package strangelove_ventures.poa.v1;

import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

option go_package = "github.com/strangelove-ventures/poa";

// Validators is a collection of Validators.
message Validators {
  option (amino.name) = "poa/Validators";

  // A list of all the validators
  repeated Validator validators = 1 [ (gogoproto.nullable) = false ];
}

// Description defines a validator description.
message Description {
  option (gogoproto.equal) = true;

  // moniker defines a human-readable name for the validator.
  string moniker = 1;
  // identity defines an optional identity signature (ex. UPort or Keybase).
  string identity = 2;
  // website defines an optional website link.
  string website = 3;
  // security_contact defines an optional email for security contact.
  string security_contact = 4;
  // details define other optional details.
  string details = 5;
}

// CommissionRates defines the initial commission rates to be used for creating
// a validator.
message CommissionRates {
  option (gogoproto.equal) = true;

  // rate is the commission rate charged to delegators, as a fraction.
  string rate = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // max_rate defines the maximum commission rate which validator can ever
  // charge, as a fraction.
  string max_rate = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // max_change_rate defines the maximum daily increase of the validator
  // commission, as a fraction.
  string max_change_rate = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// Commission defines commission parameters for a given validator.
message Commission {
  option (gogoproto.equal) = true;

  // commission_rates defines the initial commission rates to be used for
  // creating a validator.
  CommissionRates commission_rates = 1 [
    (gogoproto.embed) = true,
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // update_time is the last time the commission rate was changed.
  google.protobuf.Timestamp update_time = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.stdtime) = true
  ];
}

// Validator defines a validator, together with the total amount of the
// Validator's bond shares and their exchange rate to coins. Slashing results in
// a decrease in the exchange rate, allowing correct calculation of future
// undelegations without iterating over delegators. When coins are delegated to
// this validator, the validator is credited with a delegation whose number of
// bond shares is based on the amount of coins delegated divided by the current
// exchange rate. Voting power can be calculated as total bonded shares
// multiplied by exchange rate.
message Validator {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // operator_address defines the address of the validator's operator; bech
  // encoded in JSON.
  string operator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // consensus_pubkey is the consensus public key of the validator, as a
  // Protobuf Any.
  google.protobuf.Any consensus_pubkey = 2
      [ (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey" ];
  // jailed defined whether the validator has been jailed from bonded status or
  // not.
  bool jailed = 3;
  // status is the validator status (bonded/unbonding/unbonded).
  BondStatus status = 4;
  // tokens define the delegated tokens (incl. self-delegation).
  string tokens = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  // delegator_shares defines total shares issued to a validator's delegators.
  string delegator_shares = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  // description defines the description terms for the validator.
  Description description = 7
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  // unbonding_height defines, if unbonding, the height at which this validator
  // has begun unbonding.
  int64 unbonding_height = 8;
  // unbonding_time defines, if unbonding, the min time for the validator to
  // complete unbonding.
  google.protobuf.Timestamp unbonding_time = 9 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.stdtime) = true
  ];
  // commission defines the commission parameters.
  Commission commission = 10
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  // min_self_delegation is the validator's self declared minimum self
  // delegation.
  //
  // Since: cosmos-sdk 0.46
  string min_self_delegation = 11 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  // strictly positive if this validator's unbonding has been stopped by
  // external modules
  int64 unbonding_on_hold_ref_count = 12;

  // list of unbonding ids, each uniquely identifying an unbonding of this
  // validator
  repeated uint64 unbonding_ids = 13;
}

// BondStatus is the status of a validator.
enum BondStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  // UNSPECIFIED defines an invalid validator status.
  BOND_STATUS_UNSPECIFIED = 0
      [ (gogoproto.enumvalue_customname) = "Unspecified" ];
  // UNBONDED defines a validator that is not bonded.
  BOND_STATUS_UNBONDED = 1 [ (gogoproto.enumvalue_customname) = "Unbonded" ];
  // UNBONDING defines a validator that is unbonding.
  BOND_STATUS_UNBONDING = 2 [ (gogoproto.enumvalue_customname) = "Unbonding" ];
  // BONDED defines a validator that is bonded.
  BOND_STATUS_BONDED = 3 [ (gogoproto.enumvalue_customname) = "Bonded" ];
}